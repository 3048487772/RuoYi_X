package ${packageName}.domain.${className}VO;

#foreach ($import in $importList)
import ${import};
#end
#if(!$isLombok)
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
#end
import com.ruoyi.common.annotation.Excel;
#if($isSwagger)
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if($isLombok)
import lombok.Data;
#end

/**
 * ${functionName}创建入参对象 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
#if($isLombok)
@Data
#end
#if($isSwagger)
@ApiModel(value = "${ClassName}CreateVO", description = "${functionName}创建入参对象")
#end
public class ${ClassName}CreateVO{
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if($column.insert && !$table.isSuperColumn($column.javaField))
    /** $column.columnComment */
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($isSwagger)
    @ApiModelProperty("${comment}")
#end
    private $column.javaType $column.javaField;

#end
#end

#if(!$isLombok)
#foreach ($column in $columns)
#if($column.insert||!$table.isSuperColumn($column.javaField))
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
    public void set${AttrName}($column.javaType $column.javaField) 
    {
        this.$column.javaField = $column.javaField;
    }

    public $column.javaType get${AttrName}() 
    {
        return $column.javaField;
    }
#end
#end
    @Override
    public String toString() {
        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)
#foreach ($column in $columns)
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
            .append("${column.javaField}", get${AttrName}())
#end
            .toString();
    }
#end
}
